import { Theme, Logic, Store } from "../../def.slint";
import { Label, Paragraph, ParagraphEntry } from "../../../base/widgets.slint";

component SettingHelp inherits VerticalLayout {
    spacing: Theme.spacing * 4;

    private property <[ParagraphEntry]> entries-cn:
    [
        {
            title: "简介",
            title-link: "https://github.com/heng30/flymoon",
            contents: [
                "这是一个基于Rust和Slint GUI构建的大语言模型聊天客户端，兼容OpenAI的API。",
                "1. 支持聊天和深度思考两种聊天模式",
                "2. 支持联网谷歌搜索",
                "3. 自动保存历史聊天记录",
                "4. 自定义系统提示词",
                "5. 支持MCP服务"
            ],
        },
        {
            title: "如何配置大语言模型？",
            title-link: "https://api-docs.deepseek.com/zh-cn/",
            picture: @image-url("../../../images-help/chat-model-light-cn.png"),
            contents: [
                "1. 「API基础URL」是和OpenAI兼容的API基地址",
                "2. 「思考模型」是可选的",
            ],
        },
        {
            title: "如何配置谷歌搜索？",
            title-link: "https://developers.google.com/custom-search/v1/overview",
            picture: @image-url("../../../images-help/google-search-light-cn.png"),
            contents: [
                "1. 「CX」是谷歌搜索ID，需要自己创建",
                "2. 「链接数量」是每次进行搜索的网页数量，最高支持10个网页",
                "启用网络搜索后，会先使用谷歌搜索引擎进行搜索。然后下载网页，并将网页转换为Markdown。从而避免发送大量Html标签给大语言模型，也能减少Token消耗。"
            ],
        },
        {
            title: "如何配置系统提示词？",
            picture: @image-url("../../../images-help/prompt-light-cn.png"),
            contents: [
                "1. 「快捷键」会在聊天输入框中输入'/快捷键'触发，提问后会将指定的「详情」内容设置为系统提示词",
                "2. 「详情」是对话的系统提示词",
            ],
        },
        {
            title: "如何使用系统提示词？",
            picture: @image-url("../../../images-help/input-prompt-light-cn.png"),
            contents: [
                "1. 在对话输入框中输入'/'后会弹出提示词面板",
                "2. 提问格式：'/' + 提示词快捷键 + 空格 + 问题",
                "3. 会话提示词会被更改，并且一直有效",
            ],
        },
        {
            title: "如何配置MCP服务？",
            picture: @image-url("../../../images-help/mcp-light-cn.png"),
            contents: [
                "1. 在对话输入框中输入'@'后会弹出提示面板",
                "2. 提问格式：'@' + 提示快捷键 + 空格 + 问题",
            ],
        },
        {
            title: "如何使用MCP服务？",
            picture: @image-url("../../../images-help/input-mcp-light-cn.png"),
            contents: [
                "1. 在对话输入框中输入'@'后会弹出提示面板",
                "2. 提问格式：'@' + 提示快捷键 + 空格 + 问题",
                "3. 启动程序时，不会自动启动MCP服务。为了节约资源，只有在第一次调用时才会启动，并一直运行"
            ],
        },
        {
            title: "MCP服务配置格式？",
            title-link: "https://mcpservers.org/",
            picture: @image-url("../../../images-help/mcp-config.png"),
            contents: [
                "支持claude MCP服务的配置格式",
            ],
        },
        {
            title: "配置文件",
            title-link: "https://crates.io/crates/platform-dirs",
            contents: [
                "1. Linux: ~/.config/flymoon 和  ~/.local/share/flymoon",
                "2. Windows: C:\\Users\\Your-User-Name\\AppData\\Roaming\\flymoon 和 C:\\Users\\Your-User-Name\\AppData\\Local\\flymoon",
                "3. MacOS: /Users/Your-User-Name/Library/Application/flymoon 和 /Users/Your-User-Name/Library/Application Support/flymoon"
            ],
        },
        {
            title: "注意事项",
            contents: [
                "1. 在Linux Wayland环境中，「设置 -> 无边框」会使用程序自定义的顶部状态栏。因为在Wayland环境中，程序本身无法设置在屏幕中的位置。所以无法通过拖动顶部状态栏移动程序。需要关闭「无边框」选项，使用系统状态栏。",
            ],
        },
    ];

    private property <[ParagraphEntry]> entries-en:
    [
        {
            title: "Introduction",
            title-link: "https://github.com/heng30/flymoon",
            contents: [
                "This is a large language model chat client built with Rust and Slint GUI, compatible with OpenAI's API.",
                "1. Supports both chat and deep thinking modes",
                "2. Supports online Google search",
                "3. Automatically saves chat history",
                "4. Customizable system prompts",
                "5. Supports MCP service"
            ],
        },
        {
            title: "How to Configure the LLM?",
            title-link: "https://api-docs.deepseek.com/en/",
            picture: @image-url("../../../images-help/chat-model-light-en.png"),
            contents: [
                "1. 「API base URL」 is the OpenAI-compatible API base address",
                "2. 「Reasoner model」 is optional",
            ],
        },
        {
            title: "How to Configure Google Search?",
            title-link: "https://developers.google.com/custom-search/v1/overview",
            picture: @image-url("../../../images-help/google-search-light-en.png"),
            contents: [
                "1. 「CX」 is the Google Search ID, which you need to create yourself",
                "2. 「Link number」 is the number of web pages searched per query, with a maximum of 10 pages",
                "When web search is enabled, the Google search engine will be used first. The web pages will then be downloaded and converted to Markdown. This avoids sending excessive HTML tags to the large language model and reduces token consumption."
            ],
        },
        {
            title: "How to Configure System Prompts?",
            picture: @image-url("../../../images-help/prompt-light-en.png"),
            contents: [
                "1. 「Shortcut」 will trigger when entering '/shortcut' in the chat input box. After asking a question, the specified 「Details」 content will be set as the system prompt",
                "2. 「Detail」 is the system prompt for the conversation",
            ],
        },
        {
            title: "How to Use System Prompts?",
            picture: @image-url("../../../images-help/input-prompt-light-en.png"),
            contents: [
                "1. Entering '/' in the chat input box will open the prompt panel",
                "2. Question format: '/' + prompt shortcut key + space + question",
                "3. The conversation prompts will be modified and remain permanently effective",
            ],
        },
        {
            title: "How to configure MCP service?",
            picture: @image-url("../../../images-help/mcp-light-en.png"),
            contents: [
                "1. A prompt panel will appear when you type '@' in the chat input box",
                "2. Question format: '@' + prompt shortcut + space + question",
            ],
        },
        {
            title: "How to use MCP service?",
            picture: @image-url("../../../images-help/input-mcp-light-en.png"),
            contents: [
                "1. A prompt panel will appear when you type '@' in the chat input box",
                "2. Question format: '@' + prompt shortcut + space + question",
                "3. The MCP service doesn't start automatically when launching the program. To save resources, it only starts during the first invocation and keeps running thereafter"
            ],
        },
        {
            title: "MCP Service Configuration Format?",
            title-link: "https://mcpservers.org/",
            picture: @image-url("../../../images-help/mcp-config.png"),
            contents: [
                "Supported configuration format for Claude MCP service",
            ],
        },
        {
            title: "Configuration File",
            title-link: "https://crates.io/crates/platform-dirs",
            contents: [
                "1. Linux: ~/.config/flymoon and  ~/.local/share/flymoon",
                "2. Windows: C:\\Users\\Your-User-Name\\AppData\\Roaming",
                "3. MacOS: /Users/Your-User-Name/Library/Application and /Users/Your-User-Name/Library/Application Support"
            ],
        },
        {
            title: "Note",
            contents: [
                "1. In a Linux Wayland environment, enabling 「Settings -> Frameless window」 will use the application's custom top status bar. This is because in the Wayland environment, the application itself cannot set its position on the screen. As a result, you cannot move the application by dragging the top status bar. To resolve this, you need to disable the 「Frameless window」 option and use the system status bar instead"
            ],
        },
    ];

    private property <[ParagraphEntry]> entries: Store.is-cn ? entries-cn : entries-en;

    for entry in root.entries: Paragraph {
        entry: entry;
        is-picture-before-contents: true;
        content-font-size: Theme.title4-font-size;
        picture-size: 400px;
    }
}

component ShortcutsHelp inherits VerticalLayout {
    private property <[{shortcut: string, detail: string}]> shortcuts: [
        {
            shortcut: "Ctrl + N",
            detail: Logic.tr("New chat"),
        },
        {
            shortcut: "Ctrl + M",
            detail: Logic.tr("Toggle Markdown format of Bot"),
        },
        {
            shortcut: "Ctrl + S",
            detail: Logic.tr("Stop chatting"),
        },
        {
            shortcut: "Ctrl + R",
            detail: Logic.tr("Retry Last question"),
        },
        {
            shortcut: "Ctrl + K",
            detail: Logic.tr("Scroll up"),
        },
        {
            shortcut: "Ctrl + J",
            detail: Logic.tr("Scroll dowm"),
        },
        {
            shortcut: "Ctrl + T",
            detail: Logic.tr("Scroll to top"),
        },
        {
            shortcut: "Ctrl + B",
            detail: Logic.tr("Scroll to bottom"),
        },
        {
            shortcut: "Ctrl + D",
            detail: Logic.tr("Toggle reasoner model"),
        },
        {
            shortcut: "Ctrl + W",
            detail: Logic.tr("Toggle network searching"),
        },
        {
            shortcut: "Ctrl + Y",
            detail: Logic.tr("Copy latest bot responsing contents"),
        },
        {
            shortcut: "Ctrl + Q",
            detail: Logic.tr("Close window"),
        },
        {
            shortcut: "Ctrl + H",
            detail: Logic.tr("Switch to Home or History Tab"),
        },
        {
            shortcut: "Ctrl + P",
            detail: Logic.tr("Toggle current session prompt dialog"),
        },
        {
            shortcut: "Ctrl + /",
            detail: Logic.tr("Clear current session prompt"),
        },
        {
            shortcut: "Ctrl + ,",
            detail: Logic.tr("Switch to Setting Tab"),
        },
        {
            shortcut: "Ctrl + E",
            detail: Logic.tr("[History Tab]: Enter editing model"),
        },
        {
            shortcut: "Ctrl + T",
            detail: Logic.tr("[History Tab]: Toggle select all"),
        },
        {
            shortcut: "Ctrl + J",
            detail: Logic.tr("[History Tab]: Select next row"),
        },
        {
            shortcut: "Ctrl + K",
            detail: Logic.tr("[History Tab]: Select previous row"),
        },
        {
            shortcut: "Enter",
            detail: Logic.tr("[History Tab]: Load selected historial chat"),
        },
        {
            shortcut: "Ctrl + Enter",
            detail: Logic.tr("Send question"),
        },
    ];

    HorizontalLayout {
        padding-bottom: Theme.padding * 4;
        Label {
            text: Logic.tr("Shortcuts");
            font-size: Theme.title1-font-size;
            font-weight: Theme.bold-font-weight;
        }
    }

    VerticalLayout {
        alignment: LayoutAlignment.start;

        for entry[index] in shortcuts: Rectangle {
            background: Math.mod(index, 2) == 0 ? Theme.hover-background : Colors.transparent;

            HorizontalLayout {
                padding: Theme.padding * 2;

                Label {
                    width: 30%;
                    text: entry.shortcut;
                    overflow: elide;
                }

                Label {
                    text: entry.detail;
                    font-size: Theme.title4-font-size;
                    overflow: elide;
                }
            }
        }
    }
}

export component HelpDetail inherits VerticalLayout {
    spacing: Theme.spacing * 4;
    padding: Theme.padding * 2;

    SettingHelp { }

    ShortcutsHelp { }
}
