import { ListView } from "std-widgets.slint";
import { Theme, Icons, Store, Util, Logic, TabIndex } from "../def.slint";
import { SettingIconsBar }  from "../setting/desktop.slint";
import { CheckBtn, ConfirmDialogSetting, CenterLayout, NoMessageImg } from "../../base/widgets.slint";

import { Search, Label, ConfirmBtn, CancelBtn } from "../../base/widgets.slint";

component HistoryList inherits VerticalLayout {
    spacing: Theme.spacing * 2;

    in-out property <bool> is-edit;

    ListView {
        for entry[index] in Store.chat-histories: Rectangle {
            background: ta.has-hover ? Theme.checked-background : Math.mod(index, 2) == 0 ? Theme.hover-background : Colors.transparent;

            ta := TouchArea {
                mouse-cursor: self.has-hover && !is-edit ? MouseCursor.pointer : MouseCursor.default;
                clicked => {
                    if (!is-edit) {
                        Logic.chat-history-load(entry.uuid);
                    }
                }
            }

            VerticalLayout {
                spacing: Theme.spacing * 2;
                padding: Theme.padding * 2;

                HorizontalLayout {
                    spacing: Theme.spacing;

                    if is-edit: CheckBtn {
                        checked: entry.checked;

                        toggled => {
                            entry.checked = !entry.checked;
                        }
                    }

                    Label {
                        width: Theme.default-font-size * 2;
                        text: index;
                    }

                    Label {
                        width: self.preferred-width + Theme.padding * 4;
                        text: entry.time;
                    }

                    Label {
                        overflow: elide;
                        text: entry.summary;
                    }
                }
            }
        }
    }

    hbox := HorizontalLayout {
        padding: Theme.padding * 2;
        alignment: !is-edit ? LayoutAlignment.end : LayoutAlignment.space-between;

        if !is-edit && Store.chat-histories-cache.length > 0: ConfirmBtn {
            text: Logic.tr("Edit");
            icon: Icons.edit;

            clicked => {
                is-edit = true;
            }
        }

        if is-edit:  VerticalLayout {
            alignment: LayoutAlignment.center;
            private property <bool> is-selected-all;

            CheckBtn {
                text: Logic.tr(is-selected-all ? "Cancel select all" : "Select all");
                checked: is-selected-all;

                toggled => {
                    is-selected-all = !is-selected-all;
                    if (is-selected-all) {
                        Logic.chat-histories-select-all();
                    } else {
                        Logic.chat-histories-cancel-select-all();
                    }
                }
            }
        }

        if is-edit: HorizontalLayout {
            spacing: Theme.spacing * 4;

            CancelBtn {
                clicked => {
                    is-edit = false;
                }
            }

            ConfirmBtn {
                text: Logic.tr("Delete");
                icon: Icons.delete;
                bg-color: Theme.danger-color;

                clicked => {
                    ConfirmDialogSetting.set(true, Logic.tr("Warning"), Logic.tr("Delete or not?"), "chat-histories-remove-selected", "");
                }
            }
        }
    }
}

export component History inherits VerticalLayout {
    padding: Theme.padding * 2;
    spacing: Theme.spacing * 2;

    init => {
        search.focus();
        Logic.chat-histories-init();
    }

    search := Search {
        search(text) => {
            Logic.chat-histories-update-list(text);
        }

        edited(text) => {
            Logic.chat-histories-update-list(text);
        }

        key-pressed(event) => {
            if (event.modifiers.control && event.text == "h") {
                Logic.switch-tab(TabIndex.Home);
            }
        }
    }

    Rectangle {
        if Store.chat-histories.length == 0: CenterLayout {
            NoMessageImg {
                width: root.width;
                text: Logic.tr("No Message");
            }
        }

        HistoryList {
            changed is-edit => {
                search.focus();
            }
        }
    }
}
