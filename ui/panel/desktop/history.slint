import { ListView } from "std-widgets.slint";
import { Theme, Icons, Store, Util, Logic } from "../def.slint";
import { CheckBtn} from "../../base/widgets.slint";
import { SettingIconsBar }  from "../setting/desktop.slint";

import { Search, Label, ConfirmBtn, CancelBtn } from "../../base/widgets.slint";

component HistoryList inherits VerticalLayout {
    spacing: Theme.spacing * 2;

    private property <bool> is-edit;

    ListView {
        for entry[index] in Store.chat-histories: Rectangle {
            background: ta.has-hover ? Theme.checked-background : Math.mod(index, 2) == 0 ? Theme.hover-background : Colors.transparent;

            ta := TouchArea {
                mouse-cursor: self.has-hover && !is-edit ? MouseCursor.pointer : MouseCursor.default;
                clicked => {
                    if (!is-edit) {
                        Logic.load-chat-history(entry.uuid);
                    }
                }
            }

            VerticalLayout {
                spacing: Theme.spacing * 2;
                padding: Theme.padding * 2;

                HorizontalLayout {
                    spacing: Theme.spacing;

                    if is-edit: CheckBtn {
                        checked: entry.checked;

                        toggled => {
                            entry.checked = !entry.checked;
                        }
                    }

                    Label {
                        width: self.preferred-width + Theme.padding * 2;
                        text: entry.time;
                    }

                    Label {
                        overflow: elide;
                        text: entry.summary;
                    }
                }
            }
        }
    }

    hbox := HorizontalLayout {
        alignment: !is-edit ? LayoutAlignment.end : LayoutAlignment.space-between;
        padding: Theme.padding * 2;

        if !is-edit: ConfirmBtn {
            text: Logic.tr("Edit");
            icon: Icons.edit;

            clicked => {
                is-edit = true;
            }
        }

        if is-edit: CancelBtn {
            text: Logic.tr("Select all");
            icon: Icons.checked;
            icon-size: Theme.icon-size * 0.85;
            bg-color: Theme.success-color;
            colorize: Theme.light-text-color;

            clicked => {
                Logic.chat-histories-select-all();
            }
        }

        if is-edit: HorizontalLayout {
            spacing: Theme.spacing * 4;

            CancelBtn {
                clicked => {
                    is-edit = false;
                }
            }

            ConfirmBtn {
                text: Logic.tr("Delete");
                icon: Icons.delete;
                bg-color: Theme.danger-color;

                clicked => {
                    is-edit = false;
                    Logic.chat-histories-remove-selected();
                }
            }
        }
    }
}

export component History inherits VerticalLayout {
    padding: Theme.padding * 2;
    spacing: Theme.spacing * 2;

    init => {
        search.focus();
    }

    search := Search {
        search(text) => {
            Logic.chat-histories-update-list(text);
        }

        edited(text) => {
            Logic.chat-histories-update-list(text);
        }
    }

    HistoryList { }
}
